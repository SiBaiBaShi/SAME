我现在是有点明白实践出真知或者边做边学的道理了，通过写app图片爬虫程序，我开始考虑以下问题了：
程序运行效率：
在服务器端试运行时可以达到大约一秒两张，但在主机端却只有两秒一张，为什么呢？
最开始我想可能是网速原因，然后我就开始学习写多线程
“多线程”
但是多线程并没有显著提高效率，即使我这个不存在线程间的程序交互，然后我上网了解到原来python的IO接口就一个，而我程序运行时慢是因为网速，即我的多线程实际上并没有作用。
一次偶然，我的shadowsocks关掉，程序瞬间变快，基本达到服务器速度，我才明白因为我的shadowsocks设置的是全局模式，所有流量都要先发到美国服务器，再发回来，因此很慢。
并且，多次报错我也明白我要学会看python错误提示，不能老自己尝试这解决，但这要会读python源码，现在没有时间。

“面向对象编程”
我爬取图片，不可能全爬，要不然一个个查看特别浪费时间，我需要先设置一些规则过滤图片。然而不同频道的情况有差异，不能一概而论，我就得设置不同的规则，但规则就是if语句不是字符串，不能直接引用，这就需要用面向对象编程，对规则函数进行重构。

“机器学习”
这个地方用了一个高大上的名词，主要还是与上一条设置规则相关，我需要知道我喜欢的图片和我不喜欢的图片间的差别或者，我会看两眼的图片和我直接过滤的图片的差别，现在我只能手动记录赞和查看人数间，试图找到两者的关系
{赞，观看数}{停留，扫过}这又是不是矩阵呢？




python函数传值要发生改变时，使用return语句，返回值如list来实现